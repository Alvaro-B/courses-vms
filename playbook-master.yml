---
- name: Playbook curso 
  hosts: all
  become: true
  vars:

    restart: no

    # USUARIO
    base_username: alumno
    shell: "bash"

    # Extra software
    extras: [] 

    # Definir SW máquina
    common_conf: yes 
    oh_my_zsh: no
    browsers: yes
    vsc: no
    rdp: yes 
    copy_workspace: no
    # == STS ==
    # Consultar versións: 
    # https://github.com/spring-projects/spring-tools/wiki/Previous-Versions
    spring: no
    sts_major_version: 4
    sts_version: '4.32.0.RELEASE'
    sts_distribution: 'e4.37'
    sts_openjdk_version: "{{ java_main_version }}"
    # =========

    nodejs: no 
    docker: no
    eclipse: no
    pycharm: no
    jupyter: no
    maven: no
    postman: no

    # Versións xenerais
    java_main_version: 21

    docker_compose_version: v2.39.4
    eclipse_rel: '2025-03'
    eclipse_v: 'R'
    node_version: 22
    pycharm_v: '2025.2.2'
    maven_v: 3.9.11
    tomcat_version: 9.0.84
    tomcat_major_version: 9

  tasks:   

    # TODO: revisar sw base para Fedora (eliminar innecesario cursos)
    - name: Configuración común
      include_role:
        name: common
      vars:
        # Definir url do repositorio fedora.repo e fedora-updates.repo
        # {{ mirror }}/updates/$releasever/Everything/$basearch/
        change_mirror: no
        mirror: https://fr2.rpmfind.net/linux/fedora/linux 
        username: "{{ base_username }}"
        user_shell: "{{ shell }}"
        common_selinux_state: disabled
        disable_zram: false
        extra_software: "{{ extras }}"
        disable_keyring: yes
      when: common_conf 
    
    - name: Instala Oh-My-Zsh
      include_role: 
        name: oh-my-zsh
      vars:
        username: "{{ base_username }}"
      when: oh_my_zsh

    # TODO: Acceso directo Firefox
    - name: Instala Navegadores 
      block:
          - name: Instala Firefox
            include_role:
              name: firefox
            vars:
              browser_configuration_files: no 
          
          - name: Instala Google Chrome
            include_role:
              name: google_chrome
            vars:
              chrome_owner: "{{ base_username }}"
              browser_configuration_files: no
      when: browsers
    
    # TODO: Acceso directo VSC
    - name: Instala Visual Studio Code
      include_role:
        name: visual_studio_code
      when: vsc

    # Instalación de RDP 
    # Conectarse á máquina a través do porto 3389
    # Precisa reiniciar ou iniciar sesión unha vez para que funcione.
    - name: Instalar RDP
      include_role:
        name: rdp
      vars:
        rdp_owner: "{{ base_username }}"
        rdp_users: []
      when: rdp

    - name: Copiar workspace
      copy:
        src: /vagrant/workspace
        dest: /home/{{ base_username }}
        owner: "{{ base_username }}"
        group: "{{ base_username }}"
        mode: '0755'
        remote_src: yes
      when: copy_workspace

    - name: Instalación de Spring Tool Suite
      include_role:
        name: spring_tool_suite
      vars:
        spring_tool_suite_major_version: "{{ sts_major_version }}"
        spring_tool_suite_version: "{{ sts_version }}"
        spring_tool_suite_distribution: "{{ sts_distribution }}"
        spring_tool_suite_owner: "{{ base_username }}"
        spring_tool_suite_java_option: openjdk
        spring_tool_suite_openjdk_version: "{{ sts_openjdk_version }}"
      when: spring

    - name: Reiniciar
      reboot:
      when: restart
    
# ============================================================================
    - name: Instalación de Node JS
      include_role:
        name: nodejs
      vars:
        nodejs_version: "{{ node_version }}"
      when: nodejs

    - name: Instalar Docker
      include_role:
        name: docker
      vars:
        docker_authorized_user: "{{ base_username }}"
        docker_compose_install: true
        docker_compose_version: "{{ docker_compose_version }}"
      when: docker

    # Descarga e instala el eclipse para cualquier versión. Solo necesitamos indicar la release que queremos.
    - name: Instalación de Eclipse
      include_role:
        name: eclipse
      vars:
        eclipse_release: "{{ eclipse_rel }}" 
        eclipse_owner: "{{ base_username }}"
        # Si necesitamos cualquier plugin de estos tres, se definen a true y se instalan automáticamente. Solo se han probado en versiones modernas de eclipse.
        install_oepe: false
        install_jboss_tools: false
        # Pasa los parámetros al rol de java.
        # El eclipse 2020 no admite java 8
        eclipse_java_option: openjdk
        eclipse_openjdk_version: "{{ java_main_version }}"
        eclipse_version: "{{eclipse_v}}"
      when: eclipse

    - name: Instalar PyCharm
      include_role:
        name: pycharm
      vars:
        pycharm_version: "{{ pycharm_v }}"
        pycharm_owner: "{{ base_username }}"
      when: pycharm

    - name: Rol jupyter notebook
      include_role:
        name: jupyter_notebook
      vars:
        jupyter_notebook_owner: "{{ base_username }}"
        jupyter_notebook_r: false
        jupyter_notebook_pyspark: true
        jupyter_notebook_pyspark_auto: false
      when: jupyter

    - name: Instalación de maven
      include_role:
        name: maven
      vars:
        maven_version: "{{ maven_v }}" 
        maven_java_option: openjdk
        maven_openjdk_version: "{{ java_main_version }}"
      when: maven

    - name: Instalación de Postman
      include_role:
        name: postman
      vars:
        postman_version: latest
        postman_owner: "{{ base_username }}"
      when: postman


    

    # - name: Ensure download directory
    #   file:
    #     path: /home/{{ base_username }}/Downloads
    #     owner: "{{ base_username }}"
    #     group: "{{ base_username }}"
    #     state: directory
    #     mode: 0755

    # # Descarga Apache Tomcat y lo deja comprimido en Downloads
    # - name: Download software
    #   get_url:
    #     url: "{{ item }}"
    #     dest: /home/{{ base_username }}/Downloads
    #     owner: "{{ base_username }}"
    #     group: "{{ base_username }}"
    #     mode: 0755
    #   loop:
    #     - https://dlcdn.apache.org/tomcat/tomcat-{{ tomcat_major_version }}/v{{tomcat_version}}/bin/apache-tomcat-{{tomcat_version}}.tar.gz

    # # Instalación de mysql y mysql workbench como paquete. 
    # - name: Instalación de mysql
    #  include_role:
    #    name: mysql
    #  vars:
    #    # Ignorado en centos7, ya que solo hay hasta la 8.0.22-1
    #    mysql_workbench_version: 8.0.33
    #    # opciones probadas 5.7 y 8.0
    #    mysql_version: 8.0
    #    mysql_username: "{{ base_username }}"
    #    mysql_password: "{{ base_username }}"
    #    mysql_dockerized: true
    #    mysql_native_shell_client: true
    #    mysql_client: "dbeaver"

   
    